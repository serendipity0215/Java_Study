面试题：区分方法的重载与重写
    1. 重载：
    2. 重写：
        2.1 定义：在子类中可以根据需要对从父类中继承来的方法进行改造，也称为方法的 重置、覆盖。在程序执行时，子类的方法将覆盖父类的方法。
        2.2 要求：
            ① 子类重写的方法必须和父类被重写的方法具有相同的 方法名称、参数列表
            ② 子类重写的方法的返回值类型 不能大于 父类被重写的方法的返回值类型
                > 父类被重写的方法的返回值类型是void，则子类重写的方法的返回值类型职能是void
                > 父类被重写的方法的返回值类型是A类型，则子类重写的方法的返回值类型可以是A类或A类的子类。
                > 父类被重写的方法的返回值类型是基本数据类型，则子类重写的方法的返回值类型必须与父类的基本数据类型一致。
            ③ 子类重写的方法使用的访问权限 不能小于 父类被重写的方法的访问权限
                > 子类不能重写父类中声明为private权限的方法
            ④ 子类方法抛出的异常不能大于父类被重写方法的异常





面试题：== 和 equals 的区别？
    1. == 既可以比较基本数据类型，也可以比较引用数据类型。对于基本数据类型就是比较值，对于引用数据类型就是比较内存地址。
    2. equals的话，它是属于java.lang.Object类里面的方法，如果该方法没有被重写过，默认也是 == ；哦我们可以看到String等类的equals方法是被重写过的，
        而且String类在日常开发中用的比较多，久而久之，形成了equals是比较直的错误观点。
    3. 具体要看自定义类里有没有重写Object的equals方法来判断。
    4. 通常情况下，重写equals方法，会比较类中的相应属性是否都相等。


1. 什么是多态性？什么是虚拟方法调用？
    ① 对象的多态性：父类的引用指向子类的对象。
    ② 调用方法时，编译时看左边，运行时看右边。

2. 一个类可以有几个直接父类？  只有一个
    一个父类可有多少个子类？    多个
    子类能获取直接父类的父类中的结构码？   可以
    子类能否获取父类中的private权限的属性或方法？  可以

3. super调用构造器，有哪些具体的注意点？    有且只能 二选一
    this（形参列表）：本类重载的其他的构造器
    super（形参列表）：调用父类中指定的构造器